name: setting up environment

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - main
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout
         uses: actions/checkout@main

       - name: initialization
         run: |
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get clean 
           sudo apt install expect -y
       - name: cloning repo
         run: |
           expect -c " 
           spawn git clone ${{ secrets.REPO }} source
           expect \"Username\"        
           send \"${{ secrets.GHUSER }}\r\"
           expect \"Password\"        
           send \"${{ secrets.GHPASS }}\r\"
           set timeout -1
           catch wait result
           interact"
       - name: compilation
         run: |
           ls
           cd source
           docker container prune --force
           docker build . -t mirror-bot
       - name: running Docker
         run: |
           docker run mirror-bot
  leecher:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout
         uses: actions/checkout@main

       - name: initialization
         run: |
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get clean 
           sudo apt install expect -y
       - name: cloning repo
         run: |
           expect -c " 
           spawn git clone ${{ secrets.REPOL }} source
           expect \"Username\"        
           send \"${{ secrets.GHUSER }}\r\"
           expect \"Password\"        
           send \"${{ secrets.GHPASS }}\r\"
           set timeout -1
           catch wait result
           interact"
       - name: compilation
         run: |
           ls
           cd source
           docker container prune --force
           docker build . -t leecher
       - name: running Docker
         run: |
           docker run leecher
